######################################################################
# Alias style functions 

function rc () {
    exec zsh 
}

function e () {
    exit 
}

function mr () {
    rm "$1"
}

function n () {
	nvim $1
}

function nv () {
	nvim $1
}

######################################################################
# ll

alias ll="ls -l"
alias sl="ls -l"
alias la="ls -la"
alias l="ls -l"

######################################################################
# Copy file or dir path to pasteboard

function pwc() {
    if [ -z "$1" ]
    then
        pwd | tr -d '\n' | pbcopy
    else
        initial_string="$(pwd | tr -d '\n')/$1"
        echo $initial_string | tr -d '\n' | pbcopy
    fi
}

# eval "$(pyenv init -)"
# eval "$(pyenv virtualenv-init -)"
# eval "$(starship init zsh)"

# Setup so you don't have to type `cd` to get into a directory 
setopt AUTO_CD
setopt CDABLE_VARS

# Set colors for ls
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

function show_git_branch() {
    BRANCH_NAME=$(git branch --show-current 2> /dev/null)
    if [ $? -eq 0 ]; then
        echo " %F{8}· %F{33}[$BRANCH_NAME]"
    fi 
}

function show_git_status() {
    NUMBER_OF_CHANGES=$(git status --short 2> /dev/null | wc -l | tr -d " ")
    if [ $NUMBER_OF_CHANGES -ne "0" ]; then 
        echo "%F{237}[%F{237}$NUMBER_OF_CHANGES%F{237}]"
    fi
}

function show_git_line_changes() {
    



}

function preexec() {
    timer=$(($(print -P %D{%s%6.})/1000))
}

function show_timer() {
  if [ $timer ]; then
    now=$(($(print -P %D{%s%6.})/1000))
    elapsed=$(($now-$timer))
    echo "%F{cyan}${elapsed}ms %{$reset_color%}"
    unset timer
  fi
}

function show_date_time() {
    AM_PM=$(date +%p) 
    if [[ $AM_PM == "PM" ]]; then
        date +%-I:%Mpm
    else 
        date +%-I:%Mam
    fi 
}

function precmd() {
    PROMPT="%F{8}┌── %B%F{33}nexus:%~ %F{8}· %F{33}$(show_date_time)%(?. %F{8}· %F{22}OK. %F{8}· %F{red}Error: %?)$(show_git_branch)$(show_git_status)%f%b 
%F{8}└%f %(!.#.$) "
}



