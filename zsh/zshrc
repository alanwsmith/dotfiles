######################################################################
# Exports 

export TERM=screen-256color


######################################################################
# Alias style functions 

function rc () {
    exec zsh 
}

function e () {
    exit 
}

# These aren't great since they only deal with 
# one argument. 

function n () {
	nvim $1
}

function nv () {
	nvim $1
}

# Run ps then grep the results
function psg () {
    if [ "$1" ]
    then
        if [ "$2" ]
        then
            echo "You passed too many arguments"
        else
            ps aux | grep -i "$1"
        fi
    else
        echo "You need to pass an argument"
    fi
}

######################################################################
# ll

alias ll="ls -lh"
alias sl="ls -lh"
alias la="ls -lah"
alias l="ls -lh"

######################################################################
# Copy file or dir path to pasteboard

function pwc() {
    if [ -z "$1" ]
    then
        pwd | tr -d '\n' | pbcopy
    else
        initial_string="$(pwd | tr -d '\n')/$1"
        echo $initial_string | tr -d '\n' | pbcopy
    fi
}

# Setup so you don't have to type `cd` to get into a directory 
setopt AUTO_CD
setopt CDABLE_VARS

# Set colors for ls
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced


######################################################################
# Prmopt stuff

NEWLINE=$'\n'
COLOR1='%F{33}'
COLOR2='%F{8}'
COLOR3='%F{22}'
COLOR4='%F{160}'

C1OFFSET=6
C2OFFSET=5
C2OFFSET=6
C2OFFSET=7

OFFSET=0

function preexec() {
    timer=$(($(print -P %D{%s%6.})/1000))
}

function show_git_branch() {
    BRANCH_NAME=$(git branch --show-current 2> /dev/null)
    if [ $? -eq 0 ]; then
        echo -n " ${COLOR2}· ${COLOR1}[$BRANCH_NAME]"
    fi 
}

function show_git_status() {
    NUMBER_OF_CHANGES=$(git status --short 2> /dev/null | wc -l | tr -d " ")
    if [ $NUMBER_OF_CHANGES -ne "0" ]; then 
        echo -n "${COLOR1}["
        NUMBER_A=$(git diff --shortstat 2> /dev/null | cut -d' ' -f5)
        NUMBER_B=$(git diff --shortstat 2> /dev/null | cut -d' ' -f7)
        if [ -z "$NUMBER_B" ]; then
            echo -n $NUMBER_A  
        else
            echo -n $(($NUMBER_A + $NUMBER_B))
        fi
        echo -n "]"
    fi
}

function show_timer() {
  if [ $timer ]; then
    now=$(($(print -P %D{%s%6.})/1000))
    elapsed=$(($now-$timer))
    elapsed_2=$((elapsed/1000))
    # echo " ${COLOR2}· ${COLOR1}${elapsed_2}. sec"
    seconds_with_decimals=$(echo $elapsed|awk '{printf "%.2f",$0/1000}')
    echo " ${COLOR2}· ${COLOR1}${seconds_with_decimals}sec"
    unset timer
    return $(($C1OFFSET+$C2OFFSET))
  else
    return 0
  fi

}

function show_date_time() {
    AM_PM=$(date +%p) 
    if [[ $AM_PM == "PM" ]]; then
        date +%-I:%Mpm
    else 
        date +%-I:%Mam
    fi 
}

function show_python_venv() {
    if [ -n "$VIRTUAL_ENV" ]; then 
        echo -n " ${COLOR2}· ${maroon}VENV"
    fi
}

function precmd() {
    OFFSET=58

    PROMPT="%B"
    PROMPT="${PROMPT}${COLOR2}"
    PROMPT="${PROMPT}┌── "
    PROMPT="${PROMPT}${COLOR1}"
    PROMPT="${PROMPT}nexus:%~"
    PROMPT="${PROMPT} ${COLOR2}· ${COLOR1}$(show_date_time)"
    PROMPT="${PROMPT}$(show_git_branch)"
    PROMPT="${PROMPT}$(show_git_status)"
    PROMPT="${PROMPT}%(?. ${COLOR2}· ${COLOR3}OK. ${COLOR2}· ${COLOR4}Error: %?)"
    PROMPT="${PROMPT}$(show_python_venv)"
    PROMPT="${PROMPT}$(show_timer)"
    OFFSET=$(($OFFSET+$?))
    PROMPT="${PROMPT} "

    COUNTER=$(( ${#PROMPT} - $OFFSET ))

    while [ $COUNTER -le $(tput cols) ]
    do
        PROMPT="${PROMPT}${COLOR2}─"
        COUNTER=$[$COUNTER+1]
    done

    # PROMPT="${PROMPT}-${#PROMPT}-$(tput cols)"
    #
    # PROMPT="${PROMPT} - ${COUNTER}"

    PROMPT="${PROMPT}${NEWLINE}"
    PROMPT="${PROMPT}${COLOR2}"
    PROMPT="${PROMPT}└ "
    PROMPT="${PROMPT}%f"
    PROMPT="${PROMPT}%(!.#.$) "
    PROMPT="${PROMPT}%b"
}

